steps:
  # Set up QEMU for multi-architecture support
  # - name: "gcr.io/cloud-builders/docker"
  #   entrypoint: "bash"
  #   args:
  #     - "-c"
  #     - |
  #       docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

  # Set up Docker Buildx
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker buildx create --name mybuilder --use
        docker buildx inspect --bootstrap

  - name: "gcr.io/cloud-builders/docker"
    id: Build and Push vllm
    entrypoint: "bash"
    args:
      - "-c"
      - |
        cd ./orign_runtime/stream/processors/chat/vllm && \
        docker buildx build \
          --platform linux/amd64 \
          --build-arg CACHE_BUST=$(date +%s) \
          -t us-docker.pkg.dev/$PROJECT_ID/orign/vllm:latest \
          -f Dockerfile \
          --cache-from type=registry,ref=us-docker.pkg.dev/$PROJECT_ID/orign/vllm:buildcache \
          --cache-to type=registry,ref=us-docker.pkg.dev/$PROJECT_ID/orign/vllm:buildcache,mode=max \
          --push \
          .

  - name: "gcr.io/cloud-builders/docker"
    id: Build and Push sentence_tf
    entrypoint: "bash"
    args:
      - "-c"
      - |
        cd ./orign_runtime/stream/processors/embed/sentence_tf && \
        docker buildx build \
          --platform linux/amd64 \
          -t us-docker.pkg.dev/$PROJECT_ID/orign/sentence-tf:latest \
          -f Dockerfile \
          --cache-from type=registry,ref=us-docker.pkg.dev/$PROJECT_ID/orign/sentence-tf:buildcache \
          --cache-to type=registry,ref=us-docker.pkg.dev/$PROJECT_ID/orign/sentence-tf:buildcache,mode=max \
          --push \
          .

  - name: "gcr.io/cloud-builders/docker"
    id: Build and Push doctr
    entrypoint: "bash"
    args:
      - "-c"
      - |
        cd ./orign_runtime/stream/processors/ocr/doctr && \
        docker buildx build \
          --platform linux/amd64 \
          -t us-docker.pkg.dev/$PROJECT_ID/orign/doctr:latest \
          -f Dockerfile \
          --cache-from type=registry,ref=us-docker.pkg.dev/$PROJECT_ID/orign/doctr:buildcache \
          --cache-to type=registry,ref=us-docker.pkg.dev/$PROJECT_ID/orign/doctr:buildcache,mode=max \
          --push \
          .

  - name: "gcr.io/cloud-builders/docker"
    id: Build and Push easyocr
    entrypoint: "bash"
    args:
      - "-c"
      - |
        cd ./orign_runtime/stream/processors/ocr/easyocr && \
        docker buildx build \
          --platform linux/amd64 \
          -t us-docker.pkg.dev/$PROJECT_ID/orign/easyocr:latest \
          -f Dockerfile \
          --cache-from type=registry,ref=us-docker.pkg.dev/$PROJECT_ID/orign/easyocr:buildcache \
          --cache-to type=registry,ref=us-docker.pkg.dev/$PROJECT_ID/orign/easyocr:buildcache,mode=max \
          --push \
          .

  - name: "gcr.io/cloud-builders/docker"
    id: Build and Push litellm
    entrypoint: "bash"
    args:
      - "-c"
      - |
        cd ./orign_runtime/stream/processors/chat/litellm && \
        docker buildx build \
          --platform linux/amd64 \
          --build-arg CACHE_BUST=$(date +%s) \
          -t us-docker.pkg.dev/$PROJECT_ID/orign/litellm:latest \
          -f Dockerfile \
          --cache-from type=registry,ref=us-docker.pkg.dev/$PROJECT_ID/orign/litellm:buildcache \
          --cache-to type=registry,ref=us-docker.pkg.dev/$PROJECT_ID/orign/litellm:buildcache,mode=max \
          --push \
          .

timeout: "86400s"
options:
  machineType: "N1_HIGHCPU_8"